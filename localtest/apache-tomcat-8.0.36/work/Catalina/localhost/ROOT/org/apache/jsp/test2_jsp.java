/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2016-07-15 07:52:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import java.applet.Applet;
import java.util.ArrayList;
import ua.mysite2.web.servlets.Login;

public final class test2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.applet.Applet");
    _jspx_imports_classes.add("ua.mysite2.web.servlets.Login");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    PrintWriter out_t = response.getWriter();
    out_t.println("<script type=\"text/javascript\">"+
    "document.var_question1"+
"</script>"+
"<html>"+
"<head>"+
    "<title>Title</title>"+
"</head>"+
"<meta charset=\"UTF-8\">"+
"<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />"+
"<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"all\" />"+
"<body bgcolor=\" 46 82 B4 \" text=\"black\">"+
"<br>");

      out.write('\r');
      out.write('\n');


//    String val2 ="student";
//    String val3 ="";
//    String textQuest ="";
//    String numQuest ="";
//    String numAnsw ="";
//    ArrayList<String> listAnsw= new ArrayList<String>();
//
//    String val_a_c ="";
  // try {
       String val2 = "student";
    String  val3 = (String) request.getAttribute("val1");
    String   textQuest = (String) request.getAttribute("valQ");
    String  numQuest = (String) request.getAttribute("valQ_N");
    String  numAnsw = (String) request.getAttribute("valA_N");

    String  true_answ = (String) request.getAttribute("trueAnsw");
  // ArrayList<String>  listAnsw = (ArrayList<String>) request.getAttribute("valA");
    ArrayList<String>  listAnsw=(ArrayList<String>)Login.s.getAttribute("answers");
       //String numQuest2 =numQuest;
       //String numQuest3 =numQuest;

    String    val_a_c = (String) request.getAttribute("val_a_c");
  // }catch(Exception e){System.out.println(e);}
    //request.setAttribute("valQ_N1",numQuest);

int true_answ1=Integer.valueOf(true_answ);

    if(val3.equals("admin")){val2=val3;}
    int a = 5;
    int b = a + 10;

    out_t.println("Role="+val2);
    out_t.println("Name="+val3);

    String Greating="";
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
   if(val2.equals("admin")){
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"> document.getElementById(\"quest\").readOnly = false;</script>\r\n");
Greating="Hello admin!";
    //out_t.println("Hello admin!");
}else{
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"> document.getElementById(\"quest\").readOnly = true;</script>\r\n");
Greating="Hello student!";

// out_t.println("Hello student!");
}

      out.write('\r');
      out.write('\n');

    out_t.println("<p align=\"center\">"+Greating+"</p>");
    if(val2.equals("admin"))out_t.println("<br/> val_of_c="+val_a_c);
    
      out.write("\r\n");
      out.write("\r\n");

    out_t.println(""+





"<div id=\"container\">"+
   " Question" +
            //форма перехода на другой вопрос:
            "<form method=\"post\" action=\"nextQuestion\">" +
            " <input id=\"id_nq\" type=\"text\" name=\"questionNum\" size=\"1\" value=\""+numQuest+"\" onkeyup=\"copyValueTo(this, 'valQ_N1')\" />" +
                    "<input id=\"input6\" type=\"hidden\" name=\"answerCount\" value=\""+numAnsw+"\"/>"+
            "<input type=\"submit\" value=\"questionNum\" />"+
            "</form>"+
            "<br>");
    //Форма принятия изменений:
            out_t.println("<form method=\"post\" action=\"acceptChanges\">"+
            //"<br/>"+
           //"<input type=\"hidden\" name=\"valQ_N1\" value=\"1\">"+
            //"<input id=\"input2\" type=\"text\" name=\"valQ_N1\" value=\""+numQuest2+"\">"+
            "<input id=\"input2\" type=\"hidden\" name=\"valQ_N1\" value=\""+numQuest+"\">"+
            "<input id=\"input7\" type=\"hidden\" name=\"answerCount\" value=\""+numAnsw+"\"/>"+
            "<input type=\"hidden\" name=\"inpChekAnsw\" value=\""+true_answ+"\"/>");
    if(val2.equals("admin")){out_t.println("<textarea id=\"quest\" name=\"question\"  cols=\"111\" rows=\"3\"/>"+textQuest+"</textarea>");}else{out_t.println(textQuest);};
   //дублмрующие ответы:
    for(int i=1;i<= Integer.parseInt(numAnsw);i++) {
        out_t.println("<textarea id=\"ans"+i+"\" name=\"anstext1"+i+"\" style=\"display:none;\" cols=\"80\" rows=\"1\" />"+listAnsw.get(i-1)+"</textarea>");
                                                   }
            if(val2.equals("admin")){out_t.println("<input type=\"submit\" value=\"acceptChanges\" /> Questions should not be repeated!");};

    out_t.println("<br/>"+
    "</form>"+
   //конец формы принятия изменений
            "<fieldset>"+
        "Answers");
        //"<p>"+
         //   "<br/>"+
    out_t.println("<form method=\"post\" action=\"acceptAnswers\">"+
    "<input id=\"input3\" type=\"hidden\" name=\"valQ_N1\" value=\""+numQuest+"\">"+
    "<input id=\"input5\" type=\"hidden\" name=\"answerCount\" value=\""+numAnsw+"\"/>");
//Вывод вариантов ответов:
    for(int i=1;i<= Integer.parseInt(numAnsw);i++) {
               out_t.println("<br/>"+"<input type=radio");if(val2.equals("admin")&&(true_answ1==i))out_t.println(" checked"); out_t.println(" name=\"ans\" value=\""+i+"\" onchange=\"copyValueTo(this, 'inpChekAnsw')\"> ");
        if(val2.equals("admin")){
            out_t.println("<textarea id=\"ans"+i+"\" name=\"anstext"+i+"\"  cols=\"80\" rows=\"1\" onkeyup=\"copyValueTo(this, 'anstext1"+i+"')\"/>"+listAnsw.get(i-1)+"</textarea>");
                                }else{
            out_t.println(listAnsw.get(i-1));
                                     }
       // +listAnsw.get(i-1)/*+i*/);
           }
    if(val2.equals("student")) {
        out_t.println("<br>" +
                // "<input type=radio name=\"ans\" value=\"2\"> ansver2"+
                "<input type=\"submit\" value=\"acceptAnswers\" />");
                               }
    out_t.println("</form>");
        //"</p>"+
            out_t.println("</fieldset>"+

"</div>");


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--<form method=\"post\" action=\"acceptChanges\">\r\n");
      out.write("        <br/>\r\n");
      out.write("        <textarea id=\"quest\" name=\"question\"  cols=\"111\" rows=\"3\"/>\"+textQuest+\"</textarea>\r\n");
      out.write("        <br/>\r\n");
      out.write("<input type=\"submit\" value=\"acceptChanges\" />\r\n");
      out.write("    <br/>\r\n");
      out.write("</form>-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("    ");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function copyValueTo(fromElem, toElemId) {\r\n");
      out.write("var elems = document.getElementsByName(toElemId);\r\n");
      out.write(" for (var i = 0; i < elems.length; i++) {\r\n");
      out.write("elems[i].value = fromElem.value;        }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");

    out_t.println("</body>"+
"</html>");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 // while(true){numQuest2 =numQuest;}   
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
